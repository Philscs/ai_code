name: SonarCloud Multi-Language Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    # Using Ubuntu for CI, regardless of local development on macOS
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      # Set up required tools
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # Install dependencies for different languages
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install coverage pytest pytest-cov
      
      - name: Install JavaScript dependencies
        run: |
          if [ -f package.json ]; then npm ci; fi
          npm install -g jest jest-sonar-reporter
      
      # Run tests and generate coverage reports for each language
      - name: Run Python tests with coverage
        run: |
          python -m pytest --cov=. --cov-report=xml:coverage-python.xml || true
      
      - name: Run JavaScript tests with coverage
        run: |
          if [ -f package.json ]; then
            npm test -- --coverage --testResultsProcessor=jest-sonar-reporter || true
          fi
      
      - name: Compile C code and generate coverage
        run: |
          if [ -f Makefile ]; then
            make clean || true
            make || true
            # If you have tests with gcov coverage:
            make test || true
            find . -name "*.gcno" -o -name "*.gcda" | xargs gcov -pb || true
          fi
      
      # SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Generated in SonarCloud UI
        with:
          args: >
            -Dsonar.projectKey=${GITHUB_REPOSITORY_OWNER}_${GITHUB_REPOSITORY#*/}
            -Dsonar.organization=${GITHUB_REPOSITORY_OWNER}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/tests/**,**/test/**,**/__pycache__/**,**/*.pyc,**/*.pyo,**/*.spec.js,**/*.test.js,**/.DS_Store,**/.AppleDouble,**/.LSOverride
            -Dsonar.python.coverage.reportPaths=coverage-python.xml
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.javascript.jstest.reportsPath=test-report.xml
            -Dsonar.c.file.suffixes=.c
            -Dsonar.cpp.file.suffixes=.cc,.cpp,.cxx,.c++,
            -Dsonar.c.gcov.reportsPath=.
